#include <stdio.h>
#include <stdlib.h>
#include <assert.h>

void Swap(char** a, char** b);
int strcmp(const char* s1, const char* s2);
void bubble_sort(const char* str[], int n);
int num_of_symbols_in_file(const char* filename);
int num_of_strings_in_file(const char* filename);
int max_strlen_of_file(const char* filename);
void read_file_to_buffer(const char* filename, int fsize, char* buffer);

int main()
{
    char* file_name = "onegin.txt";
    FILE* outputfile = fopen("oneginoutput.txt", "w");
    // FILE* inputfile = fopen("onegin.txt", "r");
    int colvo1 = num_of_strings_in_file("onegin.txt");
    int colvo2 = max_strlen_of_file("onegin.txt");
    printf("There are %d strings\n", colvo1);
    printf("Max length of strings is %d\n\n", colvo2);

    char* text = (char*)calloc(colvo1 * colvo2, sizeof(char));


    int fsize = num_of_symbols_in_file(file_name);
    read_file_to_buffer("onegin.txt", fsize, text);

    fprintf(outputfile, "%s", text);
    printf("%s", text);
    
    



    /*char str[colvo1][colvo2];
    int num = 0;
    while (true)
    {
        int symbol_num = 0;
        char ch = getc(inputfile);
        while(ch != '\n' && ch != EOF && ch != '\r')
        {
            str[num][symbol_num] = ch;
            symbol_num++;
            ch = getc(inputfile);
        }
        str[num][symbol_num] = '\0';
        num++;
        if (ch == EOF)
        {
            break;
        }
    }*/

    /*int n = sizeof(str) / sizeof(str[0]);
    fprintf(outputfile, "Original Text:\n\n");
    printf("Original Text:\n\n");
    for (int i = 0; i < n; i++)
    {
        fprintf(outputfile, "%s\n", str[i]);
        printf("%s\n", str[i]);
    }*/

    /*for (int i = 0; i < colvo1; i++)
    {
        int j = 0;
        while (str[i][j] != '\n' or str[i][j] != EOF)
        {
            printf("%c", str[i][j]);
            j++;
        }
        printf("\n");
    }*/





    free(text);



    //const char* str[] = {};

    //char str[20][20] = {};
    /*int num = 0;
    while (true)
    {
        int symbol_num = 0;
        int ch = getc(inputfile);
        while(ch != '\n' and ch != EOF)
        {
            str[num][symbol_num] = ch;
            symbol_num++;
            ch = getc(inputfile);
        }
        num++;
        if (ch == EOF)
        {
            break;
        }
    }


    int n = sizeof(str) / sizeof(str[0]);
    fprintf(outputfile, "Original Text:\n\n");
    printf("Original Text:\n\n");
    for (int i = 0; i < n; i++)
    {
        fprintf(outputfile, "%s\n", str[i]);
        printf("%s\n", str[i]);
    } */

    /*fprintf(outputfile, "\nSorted Text:\n\n");
    printf("\nSorted Text:\n\n");
    bubble_sort(str, n);
    for (int i = 0; i < n; i++)
    {
        fprintf(outputfile, "%s\n", str[i]);
        printf("%s\n", str[i]);
    }*/

    //fclose(inputfile);
    fclose(outputfile);
    return 0;
}

void Swap(const char** a, const char** b)
{
    const char* temp = *a;
    *a = *b;
    *b = temp;
}

int strcmp(const char* s1, const char* s2)
{
    int i = 0;
    while (s1[i] != '\0' or s2[i] != '\0')
    {
        if (s1[i] != s2[i])
        {
            if (s1[i] > s2[i])
            {
                return 1;
            }
            else
            {
                return -1;
            }
        }
        i++;
    }
    return 0;
}

/*void bubble_sort(char* str[], int n) {
    for (int i = 0; i < n - 1; i++)
    {
        for (int j = 0; j < n - i - 1; j++)
        {
            if (strcmp(str[j], str[j + 1]) > 0)
            {
                Swap(&str[j], &str[j + 1]);
            }
        }
    }
}*/

int num_of_symbols_in_file(const char* filename)
{
    FILE *fp = fopen(filename, "r");
    int counter = 0;
    while (getc(fp) != EOF)
    {
        counter++;
    }
    fclose(fp);
    return counter;
}

int num_of_strings_in_file(const char* filename)
{
    FILE *fp = fopen(filename, "r");
    int counter = 0;
    int ch = getc(fp);
    while (ch != EOF)
    {
        if (ch == '\n')
        {
            counter++;
        }
        ch = getc(fp);
    }
    fclose(fp);
    return counter;
}

int max_strlen_of_file(const char* filename)
{
    FILE *fp = fopen(filename, "r");
    int max_counter = 0;
    int counter = 0;
    int ch = getc(fp);
    while (ch != EOF)
    {
        counter++;
        if (ch == '\n')
        {
            if (counter > max_counter)
            {
                max_counter = counter;
            }
            counter = 0;
        }
        ch = getc(fp);
    }
    fclose(fp);
    return max_counter;
}

void read_file_to_buffer(const char* filename, int fsize, char* buffer)
{
    assert(buffer != NULL);
    assert(filename != NULL);
    FILE* fptr = fopen(filename, "r");
    if (fptr)
    {
        fread(buffer, sizeof(char), fsize, fptr);
        fclose(fptr);
    }
}

